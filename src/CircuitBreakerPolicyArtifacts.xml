<entityStoreData xmlns="http://www.vordel.com/2005/06/24/entityStore">
<metaInfo flags="138">
	<exportRoots>
		<key type='ESConfiguration'>
			<id field='name' value='Entity Store Configuration'/>
		</key>
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
			</key>
		</key>
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
			</key>
		</key>
	</exportRoots>
	<typeVersions>
		<type name="AttributeCompare" version="1"/>
		<type name="CacheAttributeFilter" version="1"/>
		<type name="ChangeMessageFilter" version="0"/>
		<type name="CircuitContainer" version="1"/>
		<type name="CircuitDelegateFilter" version="1"/>
		<type name="CompareAttributeFilter" version="0"/>
		<type name="ConnectToURLFilter" version="4"/>
		<type name="ConnectionFilter" version="19"/>
		<type name="ConversionFilter" version="0"/>
		<type name="CopyAttribute" version="0"/>
		<type name="CopyAttributeFilter" version="1"/>
		<type name="ESConfiguration" version="27"/>
		<type name="Entity" version="0"/>
		<type name="ExtractRESTAttributesFilter" version="2"/>
		<type name="Filter" version="5"/>
		<type name="FilterCircuit" version="4"/>
		<type name="IsCachedAttributeFilter" version="1"/>
		<type name="JavaScriptFilter" version="3"/>
		<type name="Reflector" version="0"/>
		<type name="RootChild" version="0"/>
		<type name="SaveToFileFilter" version="2"/>
		<type name="SetHTTPStatusCode" version="0"/>
	</typeVersions>
	<realizedTypes><![CDATA[
<entityStoreData>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="RootChild"/>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="ESConfiguration">
        <constant name="_version" type="integer" value="27"/>
        <!--
            Give this singleton a key.
        -->
        <field isKey="true" name="name" type="string"/>
        <!-- 
            We use this field to verify that the passphrase for the 
            encryped data is synchronized between the server and client, and
            between multiple invocations of the client
        -->
        <field name="passphraseTest" type="encrypted"/>
        <field name="version" type="string"/>
        <!-- The product key should never change for the lifetime of the product -->
        <field name="productKey" type="string"/>
        <field cardinality="?" name="gitrev" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="CircuitContainer">
    <constant name="_version" type="integer" value="1"/>
    <componentType cardinality="*" name="FilterCircuit"/>
    <componentType cardinality="*" name="CircuitContainer"/>
    <componentType cardinality="*" name="MVProperty"/>
    <field isKey="true" name="name" type="string"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="RootChild" name="FilterCircuit">
        <constant name="_version" type="integer" value="4"/>
		<componentType cardinality="*" name="Filter"/>
		<componentType cardinality="1" name="BoundCircuit"/>
		<componentType cardinality="*" name="Property"/>
		<field cardinality="1" name="start" type="@Filter"/>
		<field cardinality="?" name="fault" type="@Filter"/>
		<field isKey="true" name="name" type="string"/>
		<field cardinality="1" default="3" name="logMask" type="integer"/>

		<field cardinality="?" name="description" type="string"/>		
		<field cardinality="1" name="category" type="@PolicyCategory">
            <defaultRef>
                <key type="PolicyCategoryGroup">
                  <id field="name" value="Policy Categories"/>
                  <key type="PolicyCategory">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Entity" name="CopyAttribute">
        <constant name="_version" type="integer" value="0"/>
        <!-- Key fields -->
        <field cardinality="1" isKey="true" name="fromAttributeName" type="string"/>   
        <field cardinality="1" default="" isKey="true" name="fromAttributeNamespace" type="string"/>   
        <field cardinality="1" default="" isKey="true" name="toAttributeName" type="string"/>   
        <field cardinality="1" default="" isKey="true" name="toAttributeNamespace" type="string"/>
        <!-- Other fields -->    
        <field cardinality="?" name="attributeValue" type="string"/>
        <field cardinality="1" default="1" name="fromAttributeLocation" type="integer"/>   
        <field cardinality="1" default="1" name="toAttributeLocation" type="integer"/>           
        <field cardinality="1" default="0" name="toListAttribute" type="boolean"/>          
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="false" extends="Entity" name="AttributeCompare">
      <constant name="_version" type="integer" value="1"/>
      <field isKey="true" name="attrName" type="string"/>
      <field default="CONTAINS" isKey="true" name="matchType" type="string"/>
      <field isKey="true" name="expression" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Entity" name="Filter">
        <constant name="_version" type="integer" value="5"/>
        <field cardinality="?" name="successNode" type="@Filter"/>
        <field cardinality="?" name="failureNode" type="@Filter"/>
        <field isKey="true" name="name" type="string"/>
        <field cardinality="1" default="2" name="logMask" type="integer"/>
        <field cardinality="1" default="Filter aborted due to exception" name="logFatal" type="string"/>
        <field cardinality="1" default="Filter failed" name="logFailure" type="string"/>
        <field cardinality="1" default="Filter passed" name="logSuccess" type="string"/>
        <field cardinality="1" name="category" type="@Category">
            <defaultRef>
                <key type="CategoryGroup">
                  <id field="name" value="Filter Categories"/>
                  <key type="Category">
                      <id field="name" value="miscellaneous"/>
                  </key>
                </key>
            </defaultRef>
        </field>
      <field cardinality="1" default="0" name="abortProcessingOnLogError" type="boolean"/>
      <field cardinality="1" default="SERVICE" name="logMaskType" type="string"/>
      <field cardinality="*" name="classloader" type="^ClassLoader"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SaveToFileFilter">
		<constant name="_version" type="integer" value="2"/>
		<constant name="class" type="string" value="com.vordel.circuit.file.SaveToFileFilter"/>
		<field cardinality="1" default="${id}.out" name="fileName" type="string"/>
		<field cardinality="1" default="${environment.VINSTDIR}/message-archive" name="directory" type="string"/>
		<field cardinality="1" default="1000" name="maxFileSize" type="integer"/>
		<field cardinality="1" default="500" name="maxNumberFiles" type="integer"/>
		<field cardinality="1" default="0" name="includeHeaders" type="boolean"/>
		<field cardinality="1" default="0" name="includeRequestLine" type="boolean"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="ExtractRESTAttributesFilter">
    <constant name="_version" type="integer" value="2"/>
    <constant name="class" type="string" value="com.vordel.circuit.attribute.ExtractRESTAttributesFilter"/>
    <field cardinality="1" default="1" name="useHeaders" type="boolean"/>
    <field cardinality="1" default="1" name="useQueryString" type="boolean"/>
    <field cardinality="1" default="params.query" name="queryAttributePrefix" type="string"/>
    <field cardinality="1" default="0" name="decode" type="boolean"/>
    <field cardinality="1" name="category" type="@Category">
      <defaultRef>
        <key type="CategoryGroup">
          <id field="name" value="Filter Categories"/>
          <key type="Category">
            <id field="name" value="attribute"/>
          </key>
        </key>
      </defaultRef>
    </field>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CacheAttributeFilter">
        <constant name="_version" type="integer" value="1"/>	    
	    <constant name="class" type="string" value="com.vordel.circuit.cache.CacheAttributeFilter"/>
        <field cardinality="1" name="cacheToUse" type="^Cache"/>
	    <field cardinality="1" default="message.key" name="keyAttributeName" type="string"/>
		<field cardinality="1" default="content.body" name="attributeName" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="IsCachedAttributeFilter">
        <constant name="_version" type="integer" value="1"/>	    
	    <constant name="class" type="string" value="com.vordel.circuit.cache.IsCachedAttributeFilter"/>
        <field cardinality="1" name="cacheToUse" type="^Cache"/>
	    <field cardinality="1" default="message.key" name="keyAttributeName" type="string"/>
		<field cardinality="1" default="content.body" name="attributeName" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CopyAttributeFilter">
        <constant name="_version" type="integer" value="1"/>
        <constant name="class" type="string" value="com.vordel.circuit.attribute.CopyAttributeFilter"/>    
	    <componentType cardinality="+" name="CopyAttribute"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CircuitDelegateFilter">
        <constant name="_version" type="integer" value="1"/>
		<constant name="class" type="string" value="com.vordel.circuit.CircuitDelegateFilter"/>
		<field cardinality="?" name="circuitPK" type="^FilterCircuit"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" abstract="true" extends="Filter" name="ConversionFilter">
        <constant name="_version" type="integer" value="0"/>
		<field cardinality="?" name="outputContentType" type="string"/> 
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="ConversionFilter" name="ChangeMessageFilter">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.conversion.ChangeMessageFilter"/>
		<field cardinality="1" default="" name="body" type="string"/>	
         </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="JavaScriptFilter">
        <constant name="_version" type="integer" value="3"/>
	<constant name="class" type="string" value="com.vordel.circuit.script.ScriptFilter"/>
	<field cardinality="1" default="function invoke(msg)         {            return true;         }" name="script" type="string"/>
	<field cardinality="1" default="nashorn" name="engineName" type="string"/>
        <field cardinality="*" name="requiredProperties" type="string"/>
        <field cardinality="*" name="generatedProperties" type="string"/>
        <field cardinality="*" name="consumedProperties" type="string"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="CompareAttributeFilter">
        <constant name="_version" type="integer" value="0"/>
        <constant name="class" type="string" value="com.vordel.circuit.attribute.CompareAttributeFilter"/>
        <componentType name="AttributeCompare"/>
        <field default="MATCH_ALL" name="matchingRule" type="string"/>
    </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="ConnectionFilter">
    <constant name="_version" type="integer" value="19"/>
    <constant name="class" type="string" value="com.vordel.circuit.net.ConnectionFilter"/>
    <componentType cardinality="1" name="SaveToFileFilter"/>

    <!-- Credential profile -->
    <field cardinality="1" default="false" name="profileInUse" type="boolean"/>
    <field cardinality="?" default="reference" name="profileType" type="string"/>
    <field cardinality="?" name="profile" type="^NamedAuthnProfile"/>
    <field cardinality="?" default="" name="profileSelector" type="string"/>

    <!-- SSL Specific -->
    <field cardinality="*" name="caCerts" type="^Certificate"/>
    <field cardinality="*" name="sslUsers" type="^Certificate"/>
    <field cardinality="1" default="true" name="useRootCerts" type="boolean"/>
    <field default="FIPS:!SSLv3:!aNULL" name="ciphers" type="string"/> <!-- See OpenSSL "ciphers" manpage -->
    <!-- set of tokens for advanced SSL options: nosslv2, nosslv3, etc. -->
    <field cardinality="*" name="ssloptions" type="string">
        <defaultValue>nosslv2</defaultValue>
        <defaultValue>nosslv3</defaultValue>
        <defaultValue>notlsv1</defaultValue>
        <defaultValue>notlsv1_1</defaultValue>
    </field>

    <field cardinality="?" default="0" name="sendProxyMode" type="boolean"/>	
    <field cardinality="?" default="0" name="forwardClientHostHeader" type="boolean"/>


    <field cardinality="1" default="false" name="transparentProxy" type="boolean"/>
    <field cardinality="1" default="false" name="sendReceivedContentHeaders" type="boolean"/>
    <field cardinality="1" default="true" name="handleRedirects" type="boolean"/>
    <field cardinality="1" default="false" name="performRetries" type="boolean"/>
    <field cardinality="*" name="retryHTTPRanges" type="^HTTPStatusClass"/>
    <field cardinality="1" default="5" name="retryCount" type="string"/>
    <field cardinality="1" default="500" name="retryLatency" type="string"/>
    <field cardinality="1" default="false" name="slaBreachAsFailure" type="boolean"/>
    <field cardinality="1" default="false" name="saveTransactionOnFailure" type="boolean"/>
    <field cardinality="1" default="false" name="runPolicyOnConnectionFailure" type="boolean"/>
    <field cardinality="?" name="connectionFailurePolicy" type="^FilterCircuit"/>
    <field cardinality="?" name="proxyServer" type="^ProxyServer"/>
    <field cardinality="?" default="0" name="stickyness" type="integer"/>
    <field cardinality="?" default="unnamed" name="stickyCookieName" type="string"/>
    <field cardinality="?" default="600000" name="stickyCookieExpiry" type="long"/>
    <field cardinality="?" default="" name="stickyCookiePath" type="string"/>
    <field cardinality="?" default="" name="stickyCookieDomain" type="string"/>
    <field cardinality="?" default="false" name="loadResponseBody" type="boolean"/>
    <field cardinality="?" default="false" name="closePreviousConnection" type="boolean"/>
  </entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="ConnectionFilter" name="ConnectToURLFilter">
        <constant name="_version" type="integer" value="4"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.ConnectToURLFilter"/>
		<field cardinality="1" default="${http.request.uri}" name="url" type="string"/>	
		<field cardinality="1" default="${http.request.verb}" name="method" type="string"/>	
		<field cardinality="1" default="${content.body}" name="body" type="string"/>	
		<field cardinality="1" default="${http.headers}" name="protoHeaders" type="string"/>	
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="Filter" name="SetHTTPStatusCode">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.SetHTTPStatusFilter"/>
        <field cardinality="1" default="200" name="httpResponseStatus" type="integer"/>
	</entityType>
<entityType xmlns="http://www.vordel.com/2005/06/24/entityStore" extends="SetHTTPStatusCode" name="Reflector">
        <constant name="_version" type="integer" value="0"/>
		<constant name="class" type="string" value="com.vordel.circuit.net.ReflectFilter"/>
	</entityType>
</entityStoreData>
	]]></realizedTypes>
</metaInfo>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ESConfiguration">
	<fval name="name"><value>Entity Store Configuration</value></fval>
	<fval name="passphraseTest"><value>aHR0cDsvL3d3dy52b3JkZWwuY29t</value></fval>
	<fval name="productKey"><value>VordelGateway</value></fval>
	<fval name="version"><value>7.6.2</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
	</key>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="name"><value>Circut Breaker</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='ExtractRESTAttributesFilter'>
					<id field='name' value='Starting Filter Placeholder - Not Required'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ExtractRESTAttributesFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='attribute'/>
			</key>
		</key>
	</value></fval>
	<fval name="decode"><value>0</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="name"><value>Starting Filter Placeholder - Not Required</value></fval>
	<fval name="queryAttributePrefix"><value>params.query</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='CopyAttributeFilter'>
					<id field='name' value='Set Variables for Circuit Breaker Names and Break Values'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="useHeaders"><value>1</value></fval>
	<fval name="useQueryString"><value>1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="IsCachedAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="attributeName"><value>httpCircuitBreakerCount</value></fval>
	<fval name="cacheToUse"><value contentType="reference">
<key type='CacheManager'><id field='name' value='Cache Manager'/><key type='Cache'><id field='name' value='CircuitBoxCache'/></key></key>	</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='CircuitDelegateFilter'>
					<id field='name' value='IF Circuit Breaker Logic Passes - THEN Continue Processing'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="keyAttributeName"><value>httpCircuitBreaker</value></fval>
	<fval name="logFailure"><value>Failure while looking for key in the message attribute cache.</value></fval>
	<fval name="logFatal"><value>Error while looking for key in the  message attribiute cache. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Found the key in the message attribute cache.</value></fval>
	<fval name="name"><value>IF EXISTS - Get HTTP Circuit Breaker Count</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='JavaScriptFilter'>
					<id field='name' value='Compare Circuit Breaker Soft/Max Values to Current Count'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Reflector">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="httpResponseStatus"><value>500</value></fval>
	<fval name="logFailure"><value>Failed to echo back the message</value></fval>
	<fval name="logFatal"><value>Error occurred while echoing the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Successfully echoed back the message</value></fval>
	<fval name="name"><value>Reflect Set Message Response</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>CIRCUT BREAKER!!!!! This could be a fault handler, custom message, alert, or any combination thereof.</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Implement Circuit Breaker Logic</value></fval>
	<fval name="outputContentType"><value>text/plain</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='Reflector'>
					<id field='name' value='Reflect Set Message Response'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to copy attributes</value></fval>
	<fval name="logFatal"><value>Error occurred while copying attributes. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Copied attributes successfully</value></fval>
	<fval name="name"><value>Set Variables for Circuit Breaker Names and Break Values</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='IsCachedAttributeFilter'>
					<id field='name' value='IF EXISTS - Get HTTP Circuit Breaker Count'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
			<key type='CopyAttributeFilter'>
				<id field='name' value='Set Variables for Circuit Breaker Names and Break Values'/>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>httpCircuitBreaker</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>httpCircuitBreaker</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
			<key type='CopyAttributeFilter'>
				<id field='name' value='Set Variables for Circuit Breaker Names and Break Values'/>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>3</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>httpCircuitBreakerSoft</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
			<key type='CopyAttributeFilter'>
				<id field='name' value='Set Variables for Circuit Breaker Names and Break Values'/>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>5</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>httpCircuitBreakerMax</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>nashorn</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='ChangeMessageFilter'>
					<id field='name' value='Implement Circuit Breaker Logic'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="name"><value>Compare Circuit Breaker Soft/Max Values to Current Count</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="script"><value>function invoke(msg) {&#xD;&#xA;&#xD;&#xA;var httpCircuitBreakerCount = msg.get(&quot;httpCircuitBreakerCount&quot;);&#xD;&#xA;var httpCircuitBreakerMax = msg.get(&quot;httpCircuitBreakerMax&quot;);&#xD;&#xA;&#xD;&#xA; if (httpCircuitBreakerCount &gt;= httpCircuitBreakerMax) {&#xD;&#xA;    return false;&#xD;&#xA;  } else {&#xD;&#xA;   return true;&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;}</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Circut Breaker'/>
				<key type='CircuitDelegateFilter'>
					<id field='name' value='IF Circuit Breaker Logic Passes - THEN Continue Processing'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitDelegateFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Circut Breaker'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="circuitPK"><value contentType="reference">
<key type='CircuitContainer'><id field='name' value='Circuit Breaker Sample'/><key type='FilterCircuit'><id field='name' value='Sample HTTP Circuit'/></key></key>	</value></fval>
	<fval name="logFailure"><value>Failed in calling policy shortcut</value></fval>
	<fval name="logFatal"><value>Error in calling policy shortcut circuit. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in calling policy shortcut</value></fval>
	<fval name="name"><value>IF Circuit Breaker Logic Passes - THEN Continue Processing</value></fval>
	<fval name="successNode"><value contentType="reference">-1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CircuitContainer">
	<fval name="name"><value>Circuit Breaker Sample</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="FilterCircuit">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
	</key>
	<fval name="category"><value contentType="reference">
		<key type='PolicyCategoryGroup'>
			<id field='name' value='Policy Categories'/>
			<key type='PolicyCategory'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="description"><value></value></fval>
	<fval name="logMask"><value>3</value></fval>
	<fval name="name"><value>Sample HTTP Circuit</value></fval>
	<fval name="start"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='CopyAttributeFilter'>
					<id field='name' value='Set/Initialize Variables for HTTP Circuit Breaker'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="Reflector">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="httpResponseStatus"><value>200</value></fval>
	<fval name="logFailure"><value>Failed to echo back the message</value></fval>
	<fval name="logFatal"><value>Error occurred while echoing the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Successfully echoed back the message</value></fval>
	<fval name="name"><value>Reflect Message</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="JavaScriptFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="consumedProperties"></fval>
	<fval name="engineName"><value>nashorn</value></fval>
	<fval name="failureNode"><value contentType="reference">-1</value></fval>
	<fval name="generatedProperties"></fval>
	<fval name="logFailure"><value>Failed script filter</value></fval>
	<fval name="logFatal"><value>Error while attempt to run script filter. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Passed script filter</value></fval>
	<fval name="name"><value>Iterate HTTP Circuit Breaker Count By One</value></fval>
	<fval name="requiredProperties"></fval>
	<fval name="script"><value>function invoke(msg) {&#xD;&#xA;&#xD;&#xA;var httpCircuitBreakerCount = msg.get(&quot;httpCircuitBreakerCount&quot;);&#xD;&#xA;&#xD;&#xA;httpCircuitBreakerCount++;&#xD;&#xA;msg.put(&quot;httpCircuitBreakerCount&quot;, httpCircuitBreakerCount);&#xD;&#xA;&#xD;&#xA;return true;&#xD;&#xA;&#xD;&#xA;}</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='CacheAttributeFilter'>
					<id field='name' value='Update HTTP Circuit Breaker Count'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="IsCachedAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="attributeName"><value>httpCircuitBreakerCount</value></fval>
	<fval name="cacheToUse"><value contentType="reference">
<key type='CacheManager'><id field='name' value='Cache Manager'/><key type='Cache'><id field='name' value='CircuitBoxCache'/></key></key>	</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='JavaScriptFilter'>
					<id field='name' value='Iterate HTTP Circuit Breaker Count By One'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="keyAttributeName"><value>httpCircuitBreaker</value></fval>
	<fval name="logFailure"><value>Failure while looking for key in the message attribute cache.</value></fval>
	<fval name="logFatal"><value>Error while looking for key in the  message attribiute cache. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Found the key in the message attribute cache.</value></fval>
	<fval name="name"><value>Check if HTTP Circuit Breaker has Active Count</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='JavaScriptFilter'>
					<id field='name' value='Iterate HTTP Circuit Breaker Count By One'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed to copy attributes</value></fval>
	<fval name="logFatal"><value>Error occurred while copying attributes. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Copied attributes successfully</value></fval>
	<fval name="name"><value>Set/Initialize Variables for HTTP Circuit Breaker</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='ConnectToURLFilter'>
					<id field='name' value='Connect to Non-Existent Endpoint to Cause Failure and Iterate Count'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
			<key type='CopyAttributeFilter'>
				<id field='name' value='Set/Initialize Variables for HTTP Circuit Breaker'/>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>0</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>httpCircuitBreakerCount</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CopyAttribute">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
			<key type='CopyAttributeFilter'>
				<id field='name' value='Set/Initialize Variables for HTTP Circuit Breaker'/>
			</key>
		</key>
	</key>
	<fval name="attributeValue"><value>httpCircuitBreaker</value></fval>
	<fval name="fromAttributeLocation"><value>3</value></fval>
	<fval name="fromAttributeName"><value></value></fval>
	<fval name="fromAttributeNamespace"><value></value></fval>
	<fval name="toAttributeLocation"><value>1</value></fval>
	<fval name="toAttributeName"><value>httpCircuitBreaker</value></fval>
	<fval name="toAttributeNamespace"><value></value></fval>
	<fval name="toListAttribute"><value>0</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ConnectToURLFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>${content.body}</value></fval>
	<fval name="caCerts"></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="ciphers"><value>FIPS:!SSLv3:!aNULL</value></fval>
	<fval name="closePreviousConnection"><value>0</value></fval>
	<fval name="connectionFailurePolicy"><value contentType="reference">-1</value></fval>
	<fval name="failureNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='IsCachedAttributeFilter'>
					<id field='name' value='Check if HTTP Circuit Breaker has Active Count'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="forwardClientHostHeader"><value>0</value></fval>
	<fval name="handleRedirects"><value>1</value></fval>
	<fval name="loadResponseBody"><value>0</value></fval>
	<fval name="logFailure"><value>Failed to route request to endpoint.</value></fval>
	<fval name="logFatal"><value>Error occurred while routing request to endpoint. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Successfully routed request to endpoint</value></fval>
	<fval name="method"><value>GET</value></fval>
	<fval name="name"><value>Connect to Non-Existent Endpoint to Cause Failure and Iterate Count</value></fval>
	<fval name="performRetries"><value>0</value></fval>
	<fval name="profile"><value contentType="reference">-1</value></fval>
	<fval name="profileInUse"><value>0</value></fval>
	<fval name="profileSelector"><value></value></fval>
	<fval name="profileType"><value>reference</value></fval>
	<fval name="protoHeaders"><value>${http.headers}</value></fval>
	<fval name="proxyServer"><value contentType="reference">-1</value></fval>
	<fval name="retryCount"><value>5</value></fval>
	<fval name="retryHTTPRanges"><value contentType="reference">-1</value></fval>
	<fval name="retryLatency"><value>500</value></fval>
	<fval name="runPolicyOnConnectionFailure"><value>0</value></fval>
	<fval name="saveTransactionOnFailure"><value>0</value></fval>
	<fval name="sendProxyMode"><value>0</value></fval>
	<fval name="sendReceivedContentHeaders"><value>0</value></fval>
	<fval name="slaBreachAsFailure"><value>0</value></fval>
	<fval name="sslUsers"><value contentType="reference">-1</value></fval>
	<fval name="ssloptions">
		<value>nosslv3</value>
		<value>notlsv1</value>
		<value>nosslv2</value>
		<value>notlsv1_1</value>
	</fval>
	<fval name="stickyCookieDomain"><value></value></fval>
	<fval name="stickyCookieExpiry"><value>600000</value></fval>
	<fval name="stickyCookieName"><value>unnamed</value></fval>
	<fval name="stickyCookiePath"><value></value></fval>
	<fval name="stickyness"><value>0</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='CompareAttributeFilter'>
					<id field='name' value='IF Result is not Desired/Expected - THEN Implement Circuit Breaker Count Iteration Logic'/>
				</key>
			</key>
		</key>
	</value></fval>
	<fval name="transparentProxy"><value>0</value></fval>
	<fval name="url"><value>https://10.128.57.109:8443/dwille/unicorn</value></fval>
	<fval name="useRootCerts"><value>1</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="SaveToFileFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
			<key type='ConnectToURLFilter'>
				<id field='name' value='Connect to Non-Existent Endpoint to Cause Failure and Iterate Count'/>
			</key>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="directory"><value>${environment.VINSTDIR}/message-archive</value></fval>
	<fval name="fileName"><value>${id}.out</value></fval>
	<fval name="includeHeaders"><value>0</value></fval>
	<fval name="includeRequestLine"><value>0</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="maxFileSize"><value>1000</value></fval>
	<fval name="maxNumberFiles"><value>500</value></fval>
	<fval name="name"><value>Persistence Details</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="ChangeMessageFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="body"><value>Status Code: ${http.response.status}&#xD;&#xA;Failure Count At End of This Execution: ${httpCircuitBreakerCount}</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="logFailure"><value>Failed in setting the message</value></fval>
	<fval name="logFatal"><value>Error in setting the message. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Success in setting the message</value></fval>
	<fval name="name"><value>Mock Response</value></fval>
	<fval name="outputContentType"><value>text/plain</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='Reflector'>
					<id field='name' value='Reflect Message'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CompareAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="failureNode"><value contentType="reference">-1</value></fval>
	<fval name="logFailure"><value>Filter failed</value></fval>
	<fval name="logFatal"><value>Filter aborted due to exception</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Filter passed</value></fval>
	<fval name="matchingRule"><value>MATCH_ALL</value></fval>
	<fval name="name"><value>IF Result is not Desired/Expected - THEN Implement Circuit Breaker Count Iteration Logic</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='IsCachedAttributeFilter'>
					<id field='name' value='Check if HTTP Circuit Breaker has Active Count'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="AttributeCompare">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
			<key type='CompareAttributeFilter'>
				<id field='name' value='IF Result is not Desired/Expected - THEN Implement Circuit Breaker Count Iteration Logic'/>
			</key>
		</key>
	</key>
	<fval name="attrName"><value>${http.response.status}</value></fval>
	<fval name="expression"><value>200</value></fval>
	<fval name="matchType"><value>IS_NOT</value></fval>
</entity>
<entity xmlns="http://www.vordel.com/2005/06/24/entityStore"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="CacheAttributeFilter">
	<key type='CircuitContainer'>
		<id field='name' value='Circuit Breaker Sample'/>
		<key type='FilterCircuit'>
			<id field='name' value='Sample HTTP Circuit'/>
		</key>
	</key>
	<fval name="abortProcessingOnLogError"><value>0</value></fval>
	<fval name="attributeName"><value>httpCircuitBreakerCount</value></fval>
	<fval name="cacheToUse"><value contentType="reference">
<key type='CacheManager'><id field='name' value='Cache Manager'/><key type='Cache'><id field='name' value='CircuitBoxCache'/></key></key>	</value></fval>
	<fval name="category"><value contentType="reference">
		<key type='CategoryGroup'>
			<id field='name' value='Filter Categories'/>
			<key type='Category'>
				<id field='name' value='miscellaneous'/>
			</key>
		</key>
	</value></fval>
	<fval name="keyAttributeName"><value>httpCircuitBreaker</value></fval>
	<fval name="logFailure"><value>Failed to cache the message attribute.</value></fval>
	<fval name="logFatal"><value>Error while caching the message attribute. Error: ${circuit.exception}</value></fval>
	<fval name="logMask"><value>2</value></fval>
	<fval name="logMaskType"><value>SERVICE</value></fval>
	<fval name="logSuccess"><value>Cached the message attribute.</value></fval>
	<fval name="name"><value>Update HTTP Circuit Breaker Count</value></fval>
	<fval name="successNode"><value contentType="reference">
		<key type='CircuitContainer'>
			<id field='name' value='Circuit Breaker Sample'/>
			<key type='FilterCircuit'>
				<id field='name' value='Sample HTTP Circuit'/>
				<key type='ChangeMessageFilter'>
					<id field='name' value='Mock Response'/>
				</key>
			</key>
		</key>
	</value></fval>
</entity>
</entityStoreData>
